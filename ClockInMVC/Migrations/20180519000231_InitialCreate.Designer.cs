// <auto-generated />
using ClockInMVC.Data;
using ClockInMVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace ClockInMVC.Migrations
{
    [DbContext(typeof(ClockInDbContext))]
    [Migration("20180519000231_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClockInMVC.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Dob");

                    b.Property<bool>("DotCompliant");

                    b.Property<string>("EmployeeStatus");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<DateTime>("LicExpire");

                    b.Property<DateTime>("LicIssue");

                    b.Property<string>("LicNumber");

                    b.Property<DateTime>("MedExpire");

                    b.Property<DateTime>("MedIssue");

                    b.Property<string>("MiddleName");

                    b.Property<bool>("OnClock");

                    b.Property<string>("Password");

                    b.Property<string>("PasswordConf");

                    b.Property<string>("SSN");

                    b.Property<string>("SsnConfirm");

                    b.Property<int>("Title");

                    b.Property<string>("UserName");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("ClockInMVC.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Customer");

                    b.Property<DateTime>("DateDue");

                    b.Property<string>("LoadPlan");

                    b.Property<string>("OrderNumber");

                    b.Property<string>("OrderStatus");

                    b.Property<string>("State");

                    b.Property<string>("StreetName");

                    b.Property<string>("StreetNumber");

                    b.Property<DateTime>("TimeDue");

                    b.Property<int?>("TrailerForLoadTrailerID");

                    b.Property<string>("Zip");

                    b.HasKey("OrderID");

                    b.HasIndex("TrailerForLoadTrailerID")
                        .IsUnique()
                        .HasFilter("[TrailerForLoadTrailerID] IS NOT NULL");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ClockInMVC.Models.Tractor", b =>
                {
                    b.Property<int>("TractorID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DotInp");

                    b.Property<string>("Make");

                    b.Property<string>("Model");

                    b.Property<string>("Plate");

                    b.Property<DateTime>("RegDate");

                    b.Property<string>("Status");

                    b.Property<string>("TruckNumber");

                    b.Property<string>("VinNumber");

                    b.Property<string>("Year");

                    b.HasKey("TractorID");

                    b.ToTable("Tractors");
                });

            modelBuilder.Entity("ClockInMVC.Models.TractorDriverLoad", b =>
                {
                    b.Property<int>("EmployeeID");

                    b.Property<int>("TractorID");

                    b.Property<int>("OrderID");

                    b.HasKey("EmployeeID", "TractorID", "OrderID");

                    b.HasIndex("EmployeeID")
                        .IsUnique();

                    b.HasIndex("OrderID")
                        .IsUnique();

                    b.HasIndex("TractorID")
                        .IsUnique();

                    b.ToTable("DriverTractorLoad");
                });

            modelBuilder.Entity("ClockInMVC.Models.Trailer", b =>
                {
                    b.Property<int>("TrailerID")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DotInsp");

                    b.Property<string>("Make");

                    b.Property<string>("Model");

                    b.Property<string>("Plate");

                    b.Property<DateTime>("RegDate");

                    b.Property<string>("SerialNumber");

                    b.Property<string>("Status");

                    b.Property<string>("TrailerNumber");

                    b.Property<string>("Year");

                    b.HasKey("TrailerID");

                    b.ToTable("Trailers");
                });

            modelBuilder.Entity("ClockInMVC.Models.Order", b =>
                {
                    b.HasOne("ClockInMVC.Models.Trailer", "TrailerForLoad")
                        .WithOne("orderforTrailer")
                        .HasForeignKey("ClockInMVC.Models.Order", "TrailerForLoadTrailerID");
                });

            modelBuilder.Entity("ClockInMVC.Models.TractorDriverLoad", b =>
                {
                    b.HasOne("ClockInMVC.Models.Employee")
                        .WithOne("DriverTractorLoad")
                        .HasForeignKey("ClockInMVC.Models.TractorDriverLoad", "EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClockInMVC.Models.Order")
                        .WithOne("DriverTractorLoad")
                        .HasForeignKey("ClockInMVC.Models.TractorDriverLoad", "OrderID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ClockInMVC.Models.Tractor")
                        .WithOne("DriverOfTractorLoad")
                        .HasForeignKey("ClockInMVC.Models.TractorDriverLoad", "TractorID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
